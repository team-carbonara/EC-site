<!DOCTYPE html>
<html>
  <head>
    <title>EcSite</title>
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track': 'reload' %>
    <%= javascript_include_tag 'application', 'data-turbolinks-track': 'reload' %>
    <link rel="stylesheet" type="text/css" href="//cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.css"/>
    <link rel="stylesheet" type="text/css" href="//cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick-theme.css"/>
    <script type="text/javascript" src="//cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.min.js"></script>
  </head>

  <body>
    <%= render 'layouts/header' %>
    <main class="l-main">
    <%= yield %>
    </main>
    <%= render 'layouts/footer' %>

    <script>
      $(function () {
        $('.l-nav_btn').on('click', function () {
        $('.l-nav_btn_bar').toggleClass('open');
      })
        $('.l-nav_btn').on('click', function () {
        $('.l-nav').toggleClass('show');
      })

        $('.top-btn').on('click', function () {
        let header = $('body').offset().top;
        $('html,body').animate({ scrollTop: header });
      })
        let topBtn = $('.top-btn');
        topBtn.hide();
        $(window).scroll(function () {
        if ($(this).scrollTop() > 500) {
          topBtn.fadeIn();
        } else {
          topBtn.fadeOut();
        } return false;
      });

      media();
      $(window).on("resize", function () { media(); });
      let url = location.href;
      function media() {
        let width = $(window).width();
        if (width > 771) {
          let beforePos = 0;//スクロールの値の比較用の設定

      //スクロール途中でヘッダーが消え、上にスクロールすると復活する設定を関数にまとめる
          function ScrollAnime() {
            let scroll = $(window).scrollTop();
            let nav_height = $(".l-header").outerHeight();
            //ヘッダーの出し入れをする
            // $("html").css("padding-top", nav_height);

        if (scroll < 1) {
          //ヘッダーが一番上の時
          $('.l-header').removeClass('DownMove');//.l-headerにDownMoveというクラス名を除き
          $('.l-header').removeClass('UpMove');//.l-headerにDownMoveというクラス名を除き
          $('.l-header').addClass('inv');
        } else if (0 < scroll - beforePos) {
          //下にスクロールした時ヘッダーが上に消える
          $('.l-header').removeClass('DownMove');//.l-headerにDownMoveというクラス名を除き
          $('.l-header').addClass('UpMove');//.l-headerにUpMoveのクラス名を追加

        } else {
          // 上にスクロールした時ヘッダーが上から出現
          $('.l-header').removeClass('UpMove'); //.l-headerにUpMoveというクラス名を除き
          $('.l-header').addClass('DownMove');//.l-headerにDownMoveのクラス名を追加
          $('.l-header').removeClass('inv');
        }

          beforePos = scroll;//現在のスクロール値を比較用のbeforePosに格納
        }
      // 画面をスクロールをしたら動かしたい場合の記述
          $(window).scroll(function () {
            ScrollAnime();//スクロール途中でヘッダーが消え、上にスクロールすると復活する関数を呼ぶ
          });

          // ページが読み込まれたらすぐに動かしたい場合の記述
          $(window).on('load', function () {
            ScrollAnime();//スクロール途中でヘッダーが消え、上にスクロールすると復活する関数を呼ぶ
          });

        } else if (width <= 770) {
          $('.l-header').removeClass('inv');
          let beforePos = 0;//スクロールの値の比較用の設定

          //スクロール途中でヘッダーが消え、上にスクロールすると復活する設定を関数にまとめる
          function ScrollAnime() {
            let scroll = $(window).scrollTop();
            let a = $('.l-header').outerHeight()
            let nav_height = $(".l-header").outerHeight();

          if (scroll < a) {
            $('.l-header').removeClass('inv');
            $('.l-header').removeClass('DownMove');//.l-headerにDownMoveというクラス名を除き
            $('.l-header').removeClass('UpMove');//.l-headerにDownMoveというクラス名を除き
            //IE11対策で処理を入れない
          } else if (0 < scroll - beforePos) {
              //下にスクロールした時ヘッダーが上に消える
              $('.l-header').removeClass('DownMove');//.l-headerにDownMoveというクラス名を除き
              $('.l-header').addClass('UpMove');//.l-headerにUpMoveのクラス名を追加
          } else {
             // 上にスクロールした時ヘッダーが上から出現
             $('.l-header').removeClass('UpMove'); //.l-headerにUpMoveというクラス名を除き
             $('.l-header').addClass('DownMove');//.l-headerにDownMoveのクラス名を追加
             $('.l-header').removeClass('inv');
          }

            beforePos = scroll;//現在のスクロール値を比較用のbeforePosに格納
          };
          // 画面をスクロールをしたら動かしたい場合の記述
          $(window).scroll(function () {
            ScrollAnime();//スクロール途中でヘッダーが消え、上にスクロールすると復活する関数を呼ぶ
          });

          // ページが読み込まれたらすぐに動かしたい場合の記述
          $(window).on('load', function () {
            ScrollAnime();//スクロール途中でヘッダーが消え、上にスクロールすると復活する関数を呼ぶ
          });
        };
      };

        $('.top-visual').slick({
          autoplay: true,
          autoplaySpeed: 1900,
          fade : true,
        });

        let $grid = $('.product_list'),
          emptyCells = [],
          i;

        for (i = 0; i < $grid.find('.product_list_item').length; i++) {
          emptyCells.push($('<li>', { class: 'product_list_item is-empty' }));
        }
          $grid.append(emptyCells);
      });

    </script>
  </body>

</html>
